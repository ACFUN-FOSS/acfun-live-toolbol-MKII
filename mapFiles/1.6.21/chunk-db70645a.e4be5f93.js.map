{"version":3,"sources":["webpack:///./src/electron_browser/views/danmakuWeb/self.vue?dd0c","webpack:///./src/electron_browser/views/danmakuWeb/self.vue","webpack:///./src/electron_browser/views/danmakuWeb/self.vue?03b0","webpack:///./src/electron_browser/views/danmakuWeb/self.vue?0865"],"names":["style","superChatEnable","class","src","url","name","statusTimer","appID","this","$store","state","isLogined","registerEvents","statusLooper","updateSettings","unRegisterEvents","computed","file","$route","query","link","window","location","host","userSession","userID","roomProfile","liveID","rank","clubName","methods","fetch","cache","then","res","json","danmakuProfile","web","common","on","setMock","handleResponse","restartDanmaku","off","e","key","registered","register","subscribeData","error","console","log","includes","streamStatus","step","dispatch","sendDanmaku","wsEmit","sourceID","states","$message","success","message","clearInterval","setInterval","chechEveryThing","value","mockDanmaku","danmaku","type","document","querySelector","contentWindow","postMessage","JSON","stringify","render"],"mappings":"gHAAA,W,kECCMA,MAAA,kD,iHAAL,yBAGM,MAHN,EAGM,CAFqC,EAAAC,iB,yBAA1C,yBAA6D,G,MAA5CC,MAAM,gB,uCACvB,yBAAqE,UAA5DA,MAAK,kBAAG,EAAAD,iBAAwB,gBAAgBE,IAAK,EAAAC,K,2GCMjD,+BAAgB,CAC9BC,KAAM,aACN,OACC,MAAMC,EAAmB,KACzB,MAAO,CACNA,cACAC,MAAO,eAGT,UACCC,KAAKC,OAAOC,MAAMC,WAAY,EAC9BH,KAAKI,kBAEN,UACCJ,KAAKK,eACLL,KAAKM,iBACL,eAAa,QAEd,gBACCN,KAAKO,oBAENC,SAAU,IACN,eAAS,CACX,cACA,iBACA,iBACA,cACA,eACA,SAED,MAAG,QACF,MAAMC,EAAOT,KAAKU,OAAOC,MAAMF,MAAQ,aACvC,IAAIG,EAAO,UAAUC,OAAOC,SAASC,gCAAgCN,IAGrE,OAFI,mBAASG,EAAO,UAAUC,OAAOC,SAASC,iBAEvC,GAAGH,cAAH,UAAoBZ,KAAKgB,mBAAzB,aAAoB,EAAkBC,iBAAtC,UAAuDjB,KAAKkB,mBAA5D,aAAuD,EAAkBC,mBAAmBnB,KAAKoB,KAAKC,aAG/GC,QAAS,CACR,iBACCC,MAAM,2BAA4B,CACjCC,MAAO,aAENC,KAAMC,GAAaA,EAAIC,QACvBF,KAAME,IACN3B,KAAKC,OAAOC,MAAM0B,eAAeC,IAAMF,EAAKE,IAC5C7B,KAAKC,OAAOC,MAAM0B,eAAeE,OAChCH,EAAKG,QAAU,iCAGnB,iBACC,OAAQC,GAAG,kBAAmB/B,KAAKgC,SACnC,OAAQD,GAAG,kBAAmB/B,KAAKiC,gBACnC,OAAQF,GAAG,iBAAkB/B,KAAKkC,iBAEnC,mBACC,OAAQC,IAAI,kBAAmBnC,KAAKgC,SACpC,OAAQG,IAAI,kBAAmBnC,KAAKiC,gBACpC,OAAQE,IAAI,iBAAkBnC,KAAKkC,iBAGpC,eAAeE,GACd,IAAK,MAAMC,KAAOD,EAAGpC,KAAKC,OAAOC,MAAMmC,GAAOD,EAAEC,GAChD,0BAAaD,EAAEpB,aAAe,KAE/B,wBACC,IACM,OAAQsB,kBACN,OAAQC,SAASvC,KAAKD,OAE7BC,KAAKwC,gBACJ,MAAOC,GACRC,QAAQC,IAAIF,GAGZzC,KAAKkB,YAAYC,SAChB,CAAC,aAAc,aAAayB,SAAS5C,KAAK6C,aAAaC,QAExD9C,KAAK6C,aAAaC,KAAO,YACzB9C,KAAKC,OAAO8C,SAAS,YAAa/C,KAAKgD,eAGzC,gBACC,OAAQC,OACP,kBACA,CACCC,SAAUlD,KAAKD,MACfoD,OAAQ,CAAC,cAAe,cAAe,SAExC,WAGF,iBACCnD,KAAKC,OAAO8C,SAAS,kBACpB/C,KAAaoD,SAASC,QAAQ,CAC9BC,QAAS,WAGX,eACCC,cAAcvD,KAAKF,aACnBE,KAAKF,YAAc0D,YAAY,KAC9BxD,KAAKyD,mBACH,MAEJ,QAAQC,GACP,MAAMC,EAAmB,eAAcD,GACvC1D,KAAKgD,YAAYW,IAElB,YAAYC,GACU,OAAjBA,EAAQC,MACX,eAAYD,EAAS5D,KAAKC,QAG3B6D,SACEC,cAAc,iBAEdC,cAAcC,YAAYC,KAAKC,UAAUP,Q,UCxH9C,EAAOQ,OAASA,EAED,gB","file":"js/chunk-db70645a.e4be5f93.js","sourcesContent":["export * from \"-!../../../../node_modules/@vue/cli-service/node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../../node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./self.vue?vue&type=style&index=0&id=b85d4892&lang=scss\"","<template>\r\n\t<div style=\"width:100%;height:100%;position:relative\">\r\n\t\t<super-chat-list class=\"super-chat\" v-if=\"superChatEnable\" />\r\n\t\t<iframe :class=\"{superChatEnable}\" class=\"danmaku-self\" :src=\"url\" />\r\n\t</div>\r\n\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from \"vue\";\r\nimport { wsevent } from \"@front/api\";\r\nimport { mapState } from \"vuex\";\r\nimport { registerRole, isDev } from \"@front/util_function/base\";\r\nimport { getMockByType } from \"@front/views/danmakuSetting/mock/index\";\r\nimport { loginSession } from \"@front/api/user\";\r\nimport { danmakuGift } from \"@front/store/danmaku/danmaku\";\r\nimport { commonSettings } from \"@front/datas/danmaku\";\r\nexport default defineComponent({\r\n\tname: \"webDanmaku\",\r\n\tdata() {\r\n\t\tconst statusTimer: any = null;\r\n\t\treturn {\r\n\t\t\tstatusTimer,\r\n\t\t\tappID: \"danmakuWeb\"\r\n\t\t};\r\n\t},\r\n\tcreated() {\r\n\t\tthis.$store.state.isLogined = true;\r\n\t\tthis.registerEvents();\r\n\t},\r\n\tmounted() {\r\n\t\tthis.statusLooper();\r\n\t\tthis.updateSettings();\r\n\t\tregisterRole(\"网页端\");\r\n\t},\r\n\tbeforeUnmount() {\r\n\t\tthis.unRegisterEvents();\r\n\t},\r\n\tcomputed: {\r\n\t\t...mapState([\r\n\t\t\t\"userSession\",\r\n\t\t\t\"danmakuProfile\",\r\n\t\t\t\"danmakuSession\",\r\n\t\t\t\"roomProfile\",\r\n\t\t\t\"streamStatus\",\r\n\t\t\t\"rank\"\r\n\t\t]),\r\n\t\turl() {\r\n\t\t\tconst file = this.$route.query.file || \"index.html\";\r\n\t\t\tlet link = `http://${window.location.host}/configFiles/selfDanmaku/${file}`;\r\n\t\t\tif (isDev()) link = `http://${window.location.host}/liveChat`;\r\n\t\t\t// @ts-ignore\r\n\t\t\treturn `${link}?liverUID=${this.userSession?.userID}&liveID=${this.roomProfile?.liveID}&clubName=${this.rank.clubName}`;\r\n\t\t}\r\n\t},\r\n\tmethods: {\r\n\t\tupdateSettings() {\r\n\t\t\tfetch(\"/configFiles/config.json\", {\r\n\t\t\t\tcache: \"no-cache\"\r\n\t\t\t})\r\n\t\t\t\t.then((res: any) => res.json())\r\n\t\t\t\t.then((json: any) => {\r\n\t\t\t\t\tthis.$store.state.danmakuProfile.web = json.web;\r\n\t\t\t\t\tthis.$store.state.danmakuProfile.common =\r\n\t\t\t\t\t\tjson.common || commonSettings();\r\n\t\t\t\t});\r\n\t\t},\r\n\t\tregisterEvents() {\r\n\t\t\twsevent.on(\"sendMockDanmaku\", this.setMock);\r\n\t\t\twsevent.on(\"server-response\", this.handleResponse);\r\n\t\t\twsevent.on(\"restartDanmaku\", this.restartDanmaku);\r\n\t\t},\r\n\t\tunRegisterEvents() {\r\n\t\t\twsevent.off(\"sendMockDanmaku\", this.setMock);\r\n\t\t\twsevent.off(\"server-response\", this.handleResponse);\r\n\t\t\twsevent.off(\"restartDanmaku\", this.restartDanmaku);\r\n\t\t},\r\n\r\n\t\thandleResponse(e: any) {\r\n\t\t\tfor (const key in e) this.$store.state[key] = e[key];\r\n\t\t\tloginSession(e.userSession || {});\r\n\t\t},\r\n\t\tasync chechEveryThing() {\r\n\t\t\ttry {\r\n\t\t\t\tif (!wsevent.registered) {\r\n\t\t\t\t\tawait wsevent.register(this.appID);\r\n\t\t\t\t}\r\n\t\t\t\tthis.subscribeData();\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t}\r\n\t\t\tif (\r\n\t\t\t\tthis.roomProfile.liveID &&\r\n\t\t\t\t![\"danmakuing\", \"streaming\"].includes(this.streamStatus.step)\r\n\t\t\t) {\r\n\t\t\t\tthis.streamStatus.step = \"streaming\";\r\n\t\t\t\tthis.$store.dispatch(\"streaming\", this.sendDanmaku);\r\n\t\t\t}\r\n\t\t},\r\n\t\tsubscribeData() {\r\n\t\t\twsevent.wsEmit(\r\n\t\t\t\t\"register-client\",\r\n\t\t\t\t{\r\n\t\t\t\t\tsourceID: this.appID,\r\n\t\t\t\t\tstates: [\"userSession\", \"roomProfile\", \"rank\"]\r\n\t\t\t\t},\r\n\t\t\t\t\"server\"\r\n\t\t\t);\r\n\t\t},\r\n\t\trestartDanmaku() {\r\n\t\t\tthis.$store.dispatch(\"restartDanmaku\");\r\n\t\t\t(this as any).$message.success({\r\n\t\t\t\tmessage: \"重启弹幕中\"\r\n\t\t\t});\r\n\t\t},\r\n\t\tstatusLooper() {\r\n\t\t\tclearInterval(this.statusTimer);\r\n\t\t\tthis.statusTimer = setInterval(() => {\r\n\t\t\t\tthis.chechEveryThing();\r\n\t\t\t}, 5000);\r\n\t\t},\r\n\t\tsetMock(value: any) {\r\n\t\t\tconst mockDanmaku: any = getMockByType(value);\r\n\t\t\tthis.sendDanmaku(mockDanmaku);\r\n\t\t},\r\n\t\tsendDanmaku(danmaku: any) {\r\n\t\t\tif (danmaku.type === 1005) {\r\n\t\t\t\tdanmakuGift(danmaku, this.$store);\r\n\t\t\t}\r\n\t\t\t// @ts-ignore\r\n\t\t\tdocument\r\n\t\t\t\t.querySelector(\".danmaku-self\")\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\t.contentWindow.postMessage(JSON.stringify(danmaku));\r\n\t\t}\r\n\t}\r\n});\r\n</script>\r\n<style lang='scss'>\r\n@import \"@front/styles/variables.scss\";\r\nhtml,\r\nbody,\r\n#app {\r\n\tbackground-color: transparent;\r\n\tmin-width: 0px;\r\n\tmin-height: 0px;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tpadding: 0px;\r\n}\r\n#app {\r\n\tmargin: 0px;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\ttransition: none;\r\n}\r\n.danmaku-self {\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tborder: none;\r\n\tpadding-bottom: 16px !important;\r\n}\r\n.superChatEnable {\r\n\theight: calc(100% - 40px);\r\n}\r\n.super-chat {\r\n\tborder: none !important;\r\n\tmargin-bottom: 5px;\r\n}\r\n</style>\r\n","\r\nimport { defineComponent } from \"vue\";\r\nimport { wsevent } from \"@front/api\";\r\nimport { mapState } from \"vuex\";\r\nimport { registerRole, isDev } from \"@front/util_function/base\";\r\nimport { getMockByType } from \"@front/views/danmakuSetting/mock/index\";\r\nimport { loginSession } from \"@front/api/user\";\r\nimport { danmakuGift } from \"@front/store/danmaku/danmaku\";\r\nimport { commonSettings } from \"@front/datas/danmaku\";\r\nexport default defineComponent({\r\n\tname: \"webDanmaku\",\r\n\tdata() {\r\n\t\tconst statusTimer: any = null;\r\n\t\treturn {\r\n\t\t\tstatusTimer,\r\n\t\t\tappID: \"danmakuWeb\"\r\n\t\t};\r\n\t},\r\n\tcreated() {\r\n\t\tthis.$store.state.isLogined = true;\r\n\t\tthis.registerEvents();\r\n\t},\r\n\tmounted() {\r\n\t\tthis.statusLooper();\r\n\t\tthis.updateSettings();\r\n\t\tregisterRole(\"网页端\");\r\n\t},\r\n\tbeforeUnmount() {\r\n\t\tthis.unRegisterEvents();\r\n\t},\r\n\tcomputed: {\r\n\t\t...mapState([\r\n\t\t\t\"userSession\",\r\n\t\t\t\"danmakuProfile\",\r\n\t\t\t\"danmakuSession\",\r\n\t\t\t\"roomProfile\",\r\n\t\t\t\"streamStatus\",\r\n\t\t\t\"rank\"\r\n\t\t]),\r\n\t\turl() {\r\n\t\t\tconst file = this.$route.query.file || \"index.html\";\r\n\t\t\tlet link = `http://${window.location.host}/configFiles/selfDanmaku/${file}`;\r\n\t\t\tif (isDev()) link = `http://${window.location.host}/liveChat`;\r\n\t\t\t// @ts-ignore\r\n\t\t\treturn `${link}?liverUID=${this.userSession?.userID}&liveID=${this.roomProfile?.liveID}&clubName=${this.rank.clubName}`;\r\n\t\t}\r\n\t},\r\n\tmethods: {\r\n\t\tupdateSettings() {\r\n\t\t\tfetch(\"/configFiles/config.json\", {\r\n\t\t\t\tcache: \"no-cache\"\r\n\t\t\t})\r\n\t\t\t\t.then((res: any) => res.json())\r\n\t\t\t\t.then((json: any) => {\r\n\t\t\t\t\tthis.$store.state.danmakuProfile.web = json.web;\r\n\t\t\t\t\tthis.$store.state.danmakuProfile.common =\r\n\t\t\t\t\t\tjson.common || commonSettings();\r\n\t\t\t\t});\r\n\t\t},\r\n\t\tregisterEvents() {\r\n\t\t\twsevent.on(\"sendMockDanmaku\", this.setMock);\r\n\t\t\twsevent.on(\"server-response\", this.handleResponse);\r\n\t\t\twsevent.on(\"restartDanmaku\", this.restartDanmaku);\r\n\t\t},\r\n\t\tunRegisterEvents() {\r\n\t\t\twsevent.off(\"sendMockDanmaku\", this.setMock);\r\n\t\t\twsevent.off(\"server-response\", this.handleResponse);\r\n\t\t\twsevent.off(\"restartDanmaku\", this.restartDanmaku);\r\n\t\t},\r\n\r\n\t\thandleResponse(e: any) {\r\n\t\t\tfor (const key in e) this.$store.state[key] = e[key];\r\n\t\t\tloginSession(e.userSession || {});\r\n\t\t},\r\n\t\tasync chechEveryThing() {\r\n\t\t\ttry {\r\n\t\t\t\tif (!wsevent.registered) {\r\n\t\t\t\t\tawait wsevent.register(this.appID);\r\n\t\t\t\t}\r\n\t\t\t\tthis.subscribeData();\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t}\r\n\t\t\tif (\r\n\t\t\t\tthis.roomProfile.liveID &&\r\n\t\t\t\t![\"danmakuing\", \"streaming\"].includes(this.streamStatus.step)\r\n\t\t\t) {\r\n\t\t\t\tthis.streamStatus.step = \"streaming\";\r\n\t\t\t\tthis.$store.dispatch(\"streaming\", this.sendDanmaku);\r\n\t\t\t}\r\n\t\t},\r\n\t\tsubscribeData() {\r\n\t\t\twsevent.wsEmit(\r\n\t\t\t\t\"register-client\",\r\n\t\t\t\t{\r\n\t\t\t\t\tsourceID: this.appID,\r\n\t\t\t\t\tstates: [\"userSession\", \"roomProfile\", \"rank\"]\r\n\t\t\t\t},\r\n\t\t\t\t\"server\"\r\n\t\t\t);\r\n\t\t},\r\n\t\trestartDanmaku() {\r\n\t\t\tthis.$store.dispatch(\"restartDanmaku\");\r\n\t\t\t(this as any).$message.success({\r\n\t\t\t\tmessage: \"重启弹幕中\"\r\n\t\t\t});\r\n\t\t},\r\n\t\tstatusLooper() {\r\n\t\t\tclearInterval(this.statusTimer);\r\n\t\t\tthis.statusTimer = setInterval(() => {\r\n\t\t\t\tthis.chechEveryThing();\r\n\t\t\t}, 5000);\r\n\t\t},\r\n\t\tsetMock(value: any) {\r\n\t\t\tconst mockDanmaku: any = getMockByType(value);\r\n\t\t\tthis.sendDanmaku(mockDanmaku);\r\n\t\t},\r\n\t\tsendDanmaku(danmaku: any) {\r\n\t\t\tif (danmaku.type === 1005) {\r\n\t\t\t\tdanmakuGift(danmaku, this.$store);\r\n\t\t\t}\r\n\t\t\t// @ts-ignore\r\n\t\t\tdocument\r\n\t\t\t\t.querySelector(\".danmaku-self\")\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\t.contentWindow.postMessage(JSON.stringify(danmaku));\r\n\t\t}\r\n\t}\r\n});\r\n","import { render } from \"./self.vue?vue&type=template&id=b85d4892\"\nimport script from \"./self.vue?vue&type=script&lang=ts\"\nexport * from \"./self.vue?vue&type=script&lang=ts\"\n\nimport \"./self.vue?vue&type=style&index=0&id=b85d4892&lang=scss\"\nscript.render = render\n\nexport default script"],"sourceRoot":""}