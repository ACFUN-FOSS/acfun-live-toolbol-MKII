{"version":3,"sources":["webpack:///./src/electron_browser/views/danmakuWeb/index.vue?c2c7","webpack:///./src/electron_browser/views/danmakuWeb/index.vue","webpack:///./src/electron_browser/views/danmakuWeb/index.vue?a23d","webpack:///./src/electron_browser/views/danmakuWeb/index.vue?d067"],"names":["style","superChatEnable","class","settings","danmakuProfile","web","danmakuList","flow","name","components","superChatList","superChat","statusTimer","mock","settingTimer","reconnect","appID","this","$store","state","isLogined","registerEvents","updateSettings","statusLooper","unRegisterEvents","computed","filterFlow","danmakuSession","length","liverUID","type","data","danmuInfo","sendTime","userInfo","userID","nickname","avatar","medal","uperID","clubName","level","managerType","content","methods","on","setMock","handleResponse","subscribeData","off","e","key","userSession","checkReconnect","ws","readyState","registered","register","error","console","log","streamStatus","step","roomProfile","liveID","includes","dispatch","wsEmit","sourceID","states","clearInterval","setInterval","chechEveryThing","fetch","cache","then","res","json","common","temp","finally","clearTimeout","connectTimer","setTimeout","onclose","close","value","mockDanmaku","unshift","render"],"mappings":"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","file":"js/chunk-270759a0.b63faf88.js","sourcesContent":["export * from \"-!../../../../node_modules/@vue/cli-service/node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./index.vue?vue&type=style&index=0&id=4ce2de63&lang=scss\"","<template>\r\n\t<div style=\"width:100%;height:100%;position:relative\">\r\n\t\t<super-chat-list class=\"super-chat\" v-if=\"superChatEnable\" />\r\n\t\t<flow :class=\"{superChatEnable}\" :settings=\"danmakuProfile.web\" :danmakuList=\"flow\" />\r\n\t</div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from \"vue\";\r\nimport { wsevent } from \"@front/api\";\r\nimport { commonSettings } from \"@front/datas/danmaku\";\r\nimport { getOpenedWs } from \"@front/api/utils/websocket\";\r\nimport { tempInfo } from \"@front/datas/temp\";\r\nimport flow from \"@front/components/danmakuFlow/index.vue\";\r\nimport { mapState, mapGetters } from \"vuex\";\r\nimport superChatList from \"@front/components/superChat/index.vue\";\r\nimport { registerRole } from \"@front/util_function/base\";\r\nimport { getMockByType } from \"@front/views/danmakuSetting/mock/index\";\r\nimport { loginSession } from \"@front/api/user\";\r\nexport default defineComponent({\r\n\tname: \"webDanmaku\",\r\n\tcomponents: {\r\n\t\tflow,\r\n\t\tsuperChatList\r\n\t},\r\n\tdata() {\r\n\t\tconst statusTimer: any = null;\r\n\t\tconst mock: any = [];\r\n\t\treturn {\r\n\t\t\tstatusTimer,\r\n\t\t\tsettingTimer: false,\r\n\t\t\treconnect: false,\r\n\t\t\tappID: \"danmakuWeb\",\r\n\t\t\tmock\r\n\t\t};\r\n\t},\r\n\tcreated() {\r\n\t\tthis.$store.state.isLogined = true;\r\n\t\tthis.registerEvents();\r\n\t\tthis.updateSettings();\r\n\t},\r\n\tmounted() {\r\n\t\tthis.statusLooper();\r\n\t\tregisterRole(\"网页端\");\r\n\t},\r\n\tbeforeUnmount() {\r\n\t\tthis.unRegisterEvents();\r\n\t},\r\n\tcomputed: {\r\n\t\t...mapGetters([\"superChatEnable\"]),\r\n\t\t...mapState([\r\n\t\t\t\"userSession\",\r\n\t\t\t\"danmakuProfile\",\r\n\t\t\t\"danmakuSession\",\r\n\t\t\t\"roomProfile\",\r\n\t\t\t\"streamStatus\"\r\n\t\t]),\r\n\t\tflow() {\r\n\t\t\tconst { filterFlow }: any = this.danmakuSession;\r\n\t\t\tconst mock: Array<any> = this.mock;\r\n\t\t\tif (!filterFlow.length) {\r\n\t\t\t\treturn [\r\n\t\t\t\t\t...mock,\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tmock: true,\r\n\t\t\t\t\t\tliverUID: 23682490,\r\n\t\t\t\t\t\ttype: 1000,\r\n\t\t\t\t\t\tdata: {\r\n\t\t\t\t\t\t\tdanmuInfo: {\r\n\t\t\t\t\t\t\t\tsendTime: 1618750176864,\r\n\t\t\t\t\t\t\t\tuserInfo: {\r\n\t\t\t\t\t\t\t\t\tuserID: 1,\r\n\t\t\t\t\t\t\t\t\tnickname: \"ACFUN前后端开源⑨课\",\r\n\t\t\t\t\t\t\t\t\tavatar:\r\n\t\t\t\t\t\t\t\t\t\t\"https://tx-free-imgs.acfun.cn/FllI0yyjNgQ61QdJJdbIh9cRQIYY?imageMogr2/auto-orient/format/webp/quality/75!/ignore-error/1\",\r\n\t\t\t\t\t\t\t\t\tmedal: {\r\n\t\t\t\t\t\t\t\t\t\tuperID: 23682490,\r\n\t\t\t\t\t\t\t\t\t\tuserID: 1,\r\n\t\t\t\t\t\t\t\t\t\tclubName: \"ACER\",\r\n\t\t\t\t\t\t\t\t\t\tlevel: 999\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\tmanagerType: 0\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tcontent: \"弹幕流启动成功！尚未发现弹幕\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t];\r\n\t\t\t}\r\n\t\t\treturn filterFlow;\r\n\t\t}\r\n\t},\r\n\tmethods: {\r\n\t\tregisterEvents() {\r\n\t\t\twsevent.on(\"update-style\", this.updateSettings);\r\n\t\t\twsevent.on(\"sendMockDanmaku\", this.setMock);\r\n\t\t\twsevent.on(\"server-response\", this.handleResponse);\r\n\t\t\twsevent.on(\"requireRegister\", this.subscribeData);\r\n\t\t},\r\n\t\tunRegisterEvents() {\r\n\t\t\twsevent.off(\"update-style\", this.updateSettings);\r\n\t\t\twsevent.off(\"sendMockDanmaku\", this.setMock);\r\n\t\t\twsevent.off(\"server-response\", this.handleResponse);\r\n\t\t\twsevent.off(\"requireRegister\", this.subscribeData);\r\n\t\t},\r\n\r\n\t\thandleResponse(e: any) {\r\n\t\t\tfor (const key in e) this.$store.state[key] = e[key];\r\n\t\t\tloginSession(e.userSession || {});\r\n\t\t\tthis.checkReconnect();\r\n\t\t},\r\n\t\tasync chechEveryThing() {\r\n\t\t\ttry {\r\n\t\t\t\tif (!(wsevent.ws?.readyState === 1) || !wsevent.registered) {\r\n\t\t\t\t\tawait wsevent.register(this.appID);\r\n\t\t\t\t}\r\n\t\t\t\tthis.subscribeData();\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t}\r\n\t\t\tconsole.log(this.streamStatus.step);\r\n\t\t\tif (\r\n\t\t\t\tthis.roomProfile.liveID &&\r\n\t\t\t\t![\"danmakuing\", \"streaming\"].includes(this.streamStatus.step)\r\n\t\t\t) {\r\n\t\t\t\tthis.streamStatus.step = \"streaming\";\r\n\t\t\t\tthis.$store.dispatch(\"streaming\");\r\n\t\t\t}\r\n\t\t},\r\n\t\tsubscribeData() {\r\n\t\t\twsevent.wsEmit(\r\n\t\t\t\t\"register-client\",\r\n\t\t\t\t{\r\n\t\t\t\t\tsourceID: this.appID,\r\n\t\t\t\t\tstates: [\"userSession\", \"roomProfile\"]\r\n\t\t\t\t},\r\n\t\t\t\t\"server\"\r\n\t\t\t);\r\n\t\t},\r\n\t\tstatusLooper() {\r\n\t\t\tclearInterval(this.statusTimer);\r\n\t\t\tthis.statusTimer = setInterval(() => {\r\n\t\t\t\tthis.chechEveryThing();\r\n\t\t\t}, 5000);\r\n\t\t},\r\n\t\tupdateSettings() {\r\n\t\t\tif (this.settingTimer) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.settingTimer = true;\r\n\t\t\tfetch(\"/configFiles/config.json\", {\r\n\t\t\t\tcache: \"no-cache\"\r\n\t\t\t})\r\n\t\t\t\t.then((res: any) => res.json())\r\n\t\t\t\t.then((json: any) => {\r\n\t\t\t\t\tthis.$store.state.danmakuProfile.web = json.web;\r\n\t\t\t\t\tthis.$store.state.danmakuProfile.common =\r\n\t\t\t\t\t\tjson.common || commonSettings();\r\n\t\t\t\t\tthis.$store.state.temp = tempInfo();\r\n\t\t\t\t})\r\n\t\t\t\t.finally(() => {\r\n\t\t\t\t\tthis.settingTimer = false;\r\n\t\t\t\t});\r\n\t\t},\r\n\t\tcheckReconnect() {\r\n\t\t\tclearTimeout((this as any).connectTimer);\r\n\t\t\t(this as any).connectTimer = setTimeout(() => {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\twsevent.ws.onclose = null;\r\n\t\t\t\twsevent.ws?.close();\r\n\t\t\t}, 20 * 1000);\r\n\t\t},\r\n\t\tsetMock(value: any) {\r\n\t\t\tconst mockDanmaku: any = getMockByType(value);\r\n\t\t\tthis.mock.unshift(mockDanmaku);\r\n\t\t}\r\n\t}\r\n});\r\n</script>\r\n<style lang='scss'>\r\n@import \"@front/styles/variables.scss\";\r\nhtml,\r\nbody,\r\n#app {\r\n\tbackground-color: transparent;\r\n\tmin-width: 0px;\r\n\tmin-height: 0px;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tpadding: 0px;\r\n}\r\n#app {\r\n\tmargin: 0px;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\ttransition: none;\r\n}\r\n.danmaku-flow {\r\n\tpadding-bottom: 16px !important;\r\n}\r\n.superChatEnable {\r\n\theight: calc(100% - 40px);\r\n}\r\n.super-chat {\r\n\tborder: none !important;\r\n\tmargin-bottom: 5px;\r\n}\r\n.tips {\r\n\tposition: absolute;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tcolor: white;\r\n\tbackground-color: rgba(0, 0, 0, 0.5);\r\n\tfont-weight: 700;\r\n\tfont-size: 24px;\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n\tflex-direction: column;\r\n\talign-items: center;\r\n\t.title {\r\n\t\tfont-size: 32px;\r\n\t\tmargin-bottom: 15px;\r\n\t\tmargin-left: 50px;\r\n\t\twhite-space: nowrap;\r\n\t}\r\n\t.checkers {\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tmargin-bottom: 15px;\r\n\t\t.failed {\r\n\t\t\tcolor: $--color-danger;\r\n\t\t}\r\n\t\t.success {\r\n\t\t\tcolor: $--color-success;\r\n\t\t}\r\n\t\t.label {\r\n\t\t\twidth: 150px;\r\n\t\t}\r\n\t}\r\n\t.positioner {\r\n\t\tposition: absolute;\r\n\t\tborder-style: solid;\r\n\t\tborder-color: white;\r\n\t\theight: 5%;\r\n\t\twidth: 5%;\r\n\r\n\t\t&.lt {\r\n\t\t\ttop: 0px;\r\n\t\t\tleft: 0px;\r\n\t\t\tborder-width: 5px 0px 0px 5px;\r\n\t\t}\r\n\t\t&.rt {\r\n\t\t\ttop: 0px;\r\n\t\t\tright: 0px;\r\n\t\t\tborder-width: 5px 5px 0px 0px;\r\n\t\t}\r\n\t\t&.lb {\r\n\t\t\tbottom: 0px;\r\n\t\t\tleft: 0px;\r\n\t\t\tborder-width: 0px 0px 5px 5px;\r\n\t\t}\r\n\t\t&.rb {\r\n\t\t\tbottom: 0px;\r\n\t\t\tright: 0px;\r\n\t\t\tborder-width: 0px 5px 5px 0px;\r\n\t\t}\r\n\t}\r\n}\r\n</style>\r\n","\r\nimport { defineComponent } from \"vue\";\r\nimport { wsevent } from \"@front/api\";\r\nimport { commonSettings } from \"@front/datas/danmaku\";\r\nimport { getOpenedWs } from \"@front/api/utils/websocket\";\r\nimport { tempInfo } from \"@front/datas/temp\";\r\nimport flow from \"@front/components/danmakuFlow/index.vue\";\r\nimport { mapState, mapGetters } from \"vuex\";\r\nimport superChatList from \"@front/components/superChat/index.vue\";\r\nimport { registerRole } from \"@front/util_function/base\";\r\nimport { getMockByType } from \"@front/views/danmakuSetting/mock/index\";\r\nimport { loginSession } from \"@front/api/user\";\r\nexport default defineComponent({\r\n\tname: \"webDanmaku\",\r\n\tcomponents: {\r\n\t\tflow,\r\n\t\tsuperChatList\r\n\t},\r\n\tdata() {\r\n\t\tconst statusTimer: any = null;\r\n\t\tconst mock: any = [];\r\n\t\treturn {\r\n\t\t\tstatusTimer,\r\n\t\t\tsettingTimer: false,\r\n\t\t\treconnect: false,\r\n\t\t\tappID: \"danmakuWeb\",\r\n\t\t\tmock\r\n\t\t};\r\n\t},\r\n\tcreated() {\r\n\t\tthis.$store.state.isLogined = true;\r\n\t\tthis.registerEvents();\r\n\t\tthis.updateSettings();\r\n\t},\r\n\tmounted() {\r\n\t\tthis.statusLooper();\r\n\t\tregisterRole(\"网页端\");\r\n\t},\r\n\tbeforeUnmount() {\r\n\t\tthis.unRegisterEvents();\r\n\t},\r\n\tcomputed: {\r\n\t\t...mapGetters([\"superChatEnable\"]),\r\n\t\t...mapState([\r\n\t\t\t\"userSession\",\r\n\t\t\t\"danmakuProfile\",\r\n\t\t\t\"danmakuSession\",\r\n\t\t\t\"roomProfile\",\r\n\t\t\t\"streamStatus\"\r\n\t\t]),\r\n\t\tflow() {\r\n\t\t\tconst { filterFlow }: any = this.danmakuSession;\r\n\t\t\tconst mock: Array<any> = this.mock;\r\n\t\t\tif (!filterFlow.length) {\r\n\t\t\t\treturn [\r\n\t\t\t\t\t...mock,\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tmock: true,\r\n\t\t\t\t\t\tliverUID: 23682490,\r\n\t\t\t\t\t\ttype: 1000,\r\n\t\t\t\t\t\tdata: {\r\n\t\t\t\t\t\t\tdanmuInfo: {\r\n\t\t\t\t\t\t\t\tsendTime: 1618750176864,\r\n\t\t\t\t\t\t\t\tuserInfo: {\r\n\t\t\t\t\t\t\t\t\tuserID: 1,\r\n\t\t\t\t\t\t\t\t\tnickname: \"ACFUN前后端开源⑨课\",\r\n\t\t\t\t\t\t\t\t\tavatar:\r\n\t\t\t\t\t\t\t\t\t\t\"https://tx-free-imgs.acfun.cn/FllI0yyjNgQ61QdJJdbIh9cRQIYY?imageMogr2/auto-orient/format/webp/quality/75!/ignore-error/1\",\r\n\t\t\t\t\t\t\t\t\tmedal: {\r\n\t\t\t\t\t\t\t\t\t\tuperID: 23682490,\r\n\t\t\t\t\t\t\t\t\t\tuserID: 1,\r\n\t\t\t\t\t\t\t\t\t\tclubName: \"ACER\",\r\n\t\t\t\t\t\t\t\t\t\tlevel: 999\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\tmanagerType: 0\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tcontent: \"弹幕流启动成功！尚未发现弹幕\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t];\r\n\t\t\t}\r\n\t\t\treturn filterFlow;\r\n\t\t}\r\n\t},\r\n\tmethods: {\r\n\t\tregisterEvents() {\r\n\t\t\twsevent.on(\"update-style\", this.updateSettings);\r\n\t\t\twsevent.on(\"sendMockDanmaku\", this.setMock);\r\n\t\t\twsevent.on(\"server-response\", this.handleResponse);\r\n\t\t\twsevent.on(\"requireRegister\", this.subscribeData);\r\n\t\t},\r\n\t\tunRegisterEvents() {\r\n\t\t\twsevent.off(\"update-style\", this.updateSettings);\r\n\t\t\twsevent.off(\"sendMockDanmaku\", this.setMock);\r\n\t\t\twsevent.off(\"server-response\", this.handleResponse);\r\n\t\t\twsevent.off(\"requireRegister\", this.subscribeData);\r\n\t\t},\r\n\r\n\t\thandleResponse(e: any) {\r\n\t\t\tfor (const key in e) this.$store.state[key] = e[key];\r\n\t\t\tloginSession(e.userSession || {});\r\n\t\t\tthis.checkReconnect();\r\n\t\t},\r\n\t\tasync chechEveryThing() {\r\n\t\t\ttry {\r\n\t\t\t\tif (!(wsevent.ws?.readyState === 1) || !wsevent.registered) {\r\n\t\t\t\t\tawait wsevent.register(this.appID);\r\n\t\t\t\t}\r\n\t\t\t\tthis.subscribeData();\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t}\r\n\t\t\tconsole.log(this.streamStatus.step);\r\n\t\t\tif (\r\n\t\t\t\tthis.roomProfile.liveID &&\r\n\t\t\t\t![\"danmakuing\", \"streaming\"].includes(this.streamStatus.step)\r\n\t\t\t) {\r\n\t\t\t\tthis.streamStatus.step = \"streaming\";\r\n\t\t\t\tthis.$store.dispatch(\"streaming\");\r\n\t\t\t}\r\n\t\t},\r\n\t\tsubscribeData() {\r\n\t\t\twsevent.wsEmit(\r\n\t\t\t\t\"register-client\",\r\n\t\t\t\t{\r\n\t\t\t\t\tsourceID: this.appID,\r\n\t\t\t\t\tstates: [\"userSession\", \"roomProfile\"]\r\n\t\t\t\t},\r\n\t\t\t\t\"server\"\r\n\t\t\t);\r\n\t\t},\r\n\t\tstatusLooper() {\r\n\t\t\tclearInterval(this.statusTimer);\r\n\t\t\tthis.statusTimer = setInterval(() => {\r\n\t\t\t\tthis.chechEveryThing();\r\n\t\t\t}, 5000);\r\n\t\t},\r\n\t\tupdateSettings() {\r\n\t\t\tif (this.settingTimer) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.settingTimer = true;\r\n\t\t\tfetch(\"/configFiles/config.json\", {\r\n\t\t\t\tcache: \"no-cache\"\r\n\t\t\t})\r\n\t\t\t\t.then((res: any) => res.json())\r\n\t\t\t\t.then((json: any) => {\r\n\t\t\t\t\tthis.$store.state.danmakuProfile.web = json.web;\r\n\t\t\t\t\tthis.$store.state.danmakuProfile.common =\r\n\t\t\t\t\t\tjson.common || commonSettings();\r\n\t\t\t\t\tthis.$store.state.temp = tempInfo();\r\n\t\t\t\t})\r\n\t\t\t\t.finally(() => {\r\n\t\t\t\t\tthis.settingTimer = false;\r\n\t\t\t\t});\r\n\t\t},\r\n\t\tcheckReconnect() {\r\n\t\t\tclearTimeout((this as any).connectTimer);\r\n\t\t\t(this as any).connectTimer = setTimeout(() => {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\twsevent.ws.onclose = null;\r\n\t\t\t\twsevent.ws?.close();\r\n\t\t\t}, 20 * 1000);\r\n\t\t},\r\n\t\tsetMock(value: any) {\r\n\t\t\tconst mockDanmaku: any = getMockByType(value);\r\n\t\t\tthis.mock.unshift(mockDanmaku);\r\n\t\t}\r\n\t}\r\n});\r\n","import { render } from \"./index.vue?vue&type=template&id=4ce2de63\"\nimport script from \"./index.vue?vue&type=script&lang=ts\"\nexport * from \"./index.vue?vue&type=script&lang=ts\"\n\nimport \"./index.vue?vue&type=style&index=0&id=4ce2de63&lang=scss\"\nscript.render = render\n\nexport default script"],"sourceRoot":""}