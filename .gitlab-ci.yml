# This file is a template, and might need editing before it works on your project.
# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages
#
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

stages: # List of stages for jobs, and their order of execution
    - pre-build
    - build
    - deploy_github

cache:
    paths:
        - node_modules/
        - release/

pre-build: # This job runs in the build stage, which runs first.
    stage: pre-build
    script:
        # - ln -s /root/.nvm/versions/node/v22.12.0/bin/node /usr/bin/node
        # - ln -s /root/.nvm/versions/node/v22.12.0/lib/node /usr/lib/node
        # - ln -s /root/.nvm/versions/node/v22.12.0/bin/npm /usr/bin/npm
        # - ln -s /root/.nvm/versions/node/v22.12.0/bin/pnpm /usr/bin/pnpm
        # - ln -s /root/.nvm/versions/node/v22.12.0/bin/pnpm /usr/bin/pnpm
        - pnpm install
build: # This job runs in the build stage, which runs first.
    stage: build
    script:
        - rm -r ./release/*
        - echo "开始构建"
        - npm run build

deploy: # This job runs in the deploy stage.
    stage: deploy # It only runs when *both* jobs in the test stage complete successfully.
    environment: production
    script:
        - echo "发布至github"
        - VER=$(jq -c '.version' package.json)
        - VERSION=${VER//\"/}
        - RELEASE_PATH=$(realpath ./release)/$VERSION
        - PACKED_PATH=$RELEASE_PATH/AcfunLiveToolBox-$VERSION.zip
        - INSTALLER_PATH=$RELEASE_PATH/AcfunLiveToolBox-Windows-$VERSION-Setup.exe
        - echo $UNPACKED_PATH
        - zip -r $PACKED_PATH $RELEASE_PATH/win-unpacked
        - cd /home/gitlab-runner/ghcli/github/acfun-live-toolbox-MKII/
        - gh release create v$VERSION --generate-notes $PACKED_PATH#UnPacked.zip $INSTALLER_PATH#Installer.exe
        - echo "发布至服务器"
        - PUBLISH_PATH=/home/gitlab-runner/publish/toolbox/$VERSION
        - |
            if [-d $PUBLISH_PATH]; then
                rm -r $PUBLISH_PATH
            fi
        - mkdir -p $PUBLISH_PATH
        - mv $PACKED_PATH  $PUBLISH_PATH/UnPacked.zip
        - mv $INSTALLER_PATH  $PUBLISH_PATH/installer.exe
        - /home/gitlab-runner/publish/toolbox/toolbox.sh
